#!/bin/bash

set +e

product_group=toxphone
product_dir=toxphone

udevadm control --reload-rules

need_reboot=

#
# Создание пользовательских групп
#
#--- Group 'toxphone' ---
res=$(cat /etc/group | grep "$product_group")
if [ -z "$res" ]; then
    groupadd -f $product_group
    echo "The group $product_group is created"
fi

res=$(groups $SUDO_USER | grep "$product_group")
if [ -z "$res" ]; then
    usermod -aG $product_group $SUDO_USER
    need_reboot=yes
fi

# #--- Group 'usbrelay' ---
# res=$(cat /etc/group | grep 'usbrelay')
# if [ -z "$res" ]; then
#     groupadd -f usbrelay
#     echo "The group usbrelay is created"
# fi
#
# res=$(groups $SUDO_USER | grep 'usbrelay')
# if [ -z "$res" ]; then
#     usermod -aG usbrelay $SUDO_USER
#     need_reboot=yes
# fi

if [ "$need_reboot" = "yes" ]; then
    echo "============================================== "
    echo "! The user '$SUDO_USER' added to group '$product_group'."
   #echo "! The user '$SUDO_USER' added to group: 'usbrelay'. "
    echo "! Need relogin user and repeat installation.   "
    echo "============================================== "
    exit 1
fi

#
# Назначение прав на рабочие директории
#
chown -R root:$product_group  /etc/$product_dir
chmod -R ug=rwX,o=rX          /etc/$product_dir

chown -R root:$product_group  /var/opt/$product_dir
chmod -R ug=rwX,o=rX          /var/opt/$product_dir

#
# Регистрация systemd-сервиса
#
#sed -e "s/%TARGET_USER%/$SUDO_USER/" \
#    -i /usr/lib/systemd/user/toxphone.service

systemctl daemon-reload

#
# Регистрация пользователя для запуска pulseaudio в user-пространстве
#
loginctl enable-linger $SUDO_USER

#
# Запуск pulseaudio в user-пространстве
#
su -l $SUDO_USER -c "DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$SUDO_UID/bus systemctl --user enable pulseaudio.service"

#
# Режим работы приложения
#
response=2
# cat << EOF
# Select launch mode for ToxPhone client:
# 1 - launch application in user space;
# 2 - launch application as system service.
# If used GUI it is recommended to select the launch mode in user space (1)
# EOF
# read -r -p "Enter 1 (default) or 2: " response; response=${response:-'1'}

res=$(ps aux | grep '/usr/bin/X' | grep -v 'grep')
[ -n "$res" ] && response=1;

res=$(ps aux | grep '/usr/lib/xorg/Xorg' | grep -v 'grep')
[ -n "$res" ] && response=1;

function execSuCommand()
{
    su -l $SUDO_USER -c "DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$SUDO_UID/bus $1"
}

# 2 - As system service
if [ "$response" -eq 2 ]; then
    echo "ToxPhone will be launched as service"

    execSuCommand "systemctl --user daemon-reload"
    execSuCommand "systemctl --user enable toxphone.service"
    execSuCommand "systemctl --user start  toxphone.service"

# 1 - As application in user space
else
    echo "ToxPhone will be launched in user space"

    if [ -e /usr/lib/systemd/user/toxphone.service ]; then
        execSuCommand "systemctl --user stop    toxphone.service"
        execSuCommand "systemctl --user disable toxphone.service"

        rm -f /usr/lib/systemd/user/toxphone.service
    fi

#     if [ ! -d /home/$SUDO_USER/.config/autostart ]; then
#        mkdir -p /home/$SUDO_USER/.config/autostart
#        chown ${SUDO_USER}:${SUDO_USER} /home/$SUDO_USER/.config/autostart
#     fi

    #ln -sf /opt/toxphone/autorun/toxphone-autorun.desktop  /home/$SUDO_USER/.config/autostart/toxphone-autorun.desktop
    su -c "XDG_RUNTIME_DIR=/run/user/$SUDO_UID /opt/toxphone/autorun/toxphone-autorun" $SUDO_USER
fi

if [ -e /etc/systemd/system/toxphone-cpufreq.service ]; then
    systemctl unmask toxphone-cpufreq.service
    systemctl enable toxphone-cpufreq.service
    systemctl start  toxphone-cpufreq.service
fi

systemctl daemon-reload
udevadm control --reload-rules

exit 0
